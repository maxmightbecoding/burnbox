// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idx.proto

#ifndef PROTOBUF_idx_2eproto__INCLUDED
#define PROTOBUF_idx_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_idx_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsFile_EntryImpl();
void InitDefaultsFile_Entry();
void InitDefaultsIdxListImpl();
void InitDefaultsIdxList();
inline void InitDefaults() {
  InitDefaultsFile_Entry();
  InitDefaultsIdxList();
}
}  // namespace protobuf_idx_2eproto
class File_Entry;
class File_EntryDefaultTypeInternal;
extern File_EntryDefaultTypeInternal _File_Entry_default_instance_;
class IdxList;
class IdxListDefaultTypeInternal;
extern IdxListDefaultTypeInternal _IdxList_default_instance_;

// ===================================================================

class File_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:File_Entry) */ {
 public:
  File_Entry();
  virtual ~File_Entry();

  File_Entry(const File_Entry& from);

  inline File_Entry& operator=(const File_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  File_Entry(File_Entry&& from) noexcept
    : File_Entry() {
    *this = ::std::move(from);
  }

  inline File_Entry& operator=(File_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const File_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const File_Entry* internal_default_instance() {
    return reinterpret_cast<const File_Entry*>(
               &_File_Entry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(File_Entry* other);
  friend void swap(File_Entry& a, File_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline File_Entry* New() const PROTOBUF_FINAL { return New(NULL); }

  File_Entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const File_Entry& from);
  void MergeFrom(const File_Entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(File_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required bytes recovery = 3;
  bool has_recovery() const;
  void clear_recovery();
  static const int kRecoveryFieldNumber = 3;
  const ::std::string& recovery() const;
  void set_recovery(const ::std::string& value);
  #if LANG_CXX11
  void set_recovery(::std::string&& value);
  #endif
  void set_recovery(const char* value);
  void set_recovery(const void* value, size_t size);
  ::std::string* mutable_recovery();
  ::std::string* release_recovery();
  void set_allocated_recovery(::std::string* recovery);

  // required int32 idx = 1;
  bool has_idx() const;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::google::protobuf::int32 idx() const;
  void set_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:File_Entry)
 private:
  void set_has_idx();
  void clear_has_idx();
  void set_has_name();
  void clear_has_name();
  void set_has_recovery();
  void clear_has_recovery();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr recovery_;
  ::google::protobuf::int32 idx_;
  friend struct ::protobuf_idx_2eproto::TableStruct;
  friend void ::protobuf_idx_2eproto::InitDefaultsFile_EntryImpl();
};
// -------------------------------------------------------------------

class IdxList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IdxList) */ {
 public:
  IdxList();
  virtual ~IdxList();

  IdxList(const IdxList& from);

  inline IdxList& operator=(const IdxList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdxList(IdxList&& from) noexcept
    : IdxList() {
    *this = ::std::move(from);
  }

  inline IdxList& operator=(IdxList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdxList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdxList* internal_default_instance() {
    return reinterpret_cast<const IdxList*>(
               &_IdxList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(IdxList* other);
  friend void swap(IdxList& a, IdxList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdxList* New() const PROTOBUF_FINAL { return New(NULL); }

  IdxList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdxList& from);
  void MergeFrom(const IdxList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdxList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .File_Entry file_entry = 1;
  int file_entry_size() const;
  void clear_file_entry();
  static const int kFileEntryFieldNumber = 1;
  const ::File_Entry& file_entry(int index) const;
  ::File_Entry* mutable_file_entry(int index);
  ::File_Entry* add_file_entry();
  ::google::protobuf::RepeatedPtrField< ::File_Entry >*
      mutable_file_entry();
  const ::google::protobuf::RepeatedPtrField< ::File_Entry >&
      file_entry() const;

  // @@protoc_insertion_point(class_scope:IdxList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::File_Entry > file_entry_;
  friend struct ::protobuf_idx_2eproto::TableStruct;
  friend void ::protobuf_idx_2eproto::InitDefaultsIdxListImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// File_Entry

// required int32 idx = 1;
inline bool File_Entry::has_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void File_Entry::set_has_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void File_Entry::clear_has_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void File_Entry::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 File_Entry::idx() const {
  // @@protoc_insertion_point(field_get:File_Entry.idx)
  return idx_;
}
inline void File_Entry::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
  // @@protoc_insertion_point(field_set:File_Entry.idx)
}

// required string name = 2;
inline bool File_Entry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void File_Entry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void File_Entry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void File_Entry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& File_Entry::name() const {
  // @@protoc_insertion_point(field_get:File_Entry.name)
  return name_.GetNoArena();
}
inline void File_Entry::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:File_Entry.name)
}
#if LANG_CXX11
inline void File_Entry::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:File_Entry.name)
}
#endif
inline void File_Entry::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:File_Entry.name)
}
inline void File_Entry::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:File_Entry.name)
}
inline ::std::string* File_Entry::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:File_Entry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File_Entry::release_name() {
  // @@protoc_insertion_point(field_release:File_Entry.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File_Entry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:File_Entry.name)
}

// required bytes recovery = 3;
inline bool File_Entry::has_recovery() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void File_Entry::set_has_recovery() {
  _has_bits_[0] |= 0x00000002u;
}
inline void File_Entry::clear_has_recovery() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void File_Entry::clear_recovery() {
  recovery_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recovery();
}
inline const ::std::string& File_Entry::recovery() const {
  // @@protoc_insertion_point(field_get:File_Entry.recovery)
  return recovery_.GetNoArena();
}
inline void File_Entry::set_recovery(const ::std::string& value) {
  set_has_recovery();
  recovery_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:File_Entry.recovery)
}
#if LANG_CXX11
inline void File_Entry::set_recovery(::std::string&& value) {
  set_has_recovery();
  recovery_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:File_Entry.recovery)
}
#endif
inline void File_Entry::set_recovery(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recovery();
  recovery_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:File_Entry.recovery)
}
inline void File_Entry::set_recovery(const void* value, size_t size) {
  set_has_recovery();
  recovery_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:File_Entry.recovery)
}
inline ::std::string* File_Entry::mutable_recovery() {
  set_has_recovery();
  // @@protoc_insertion_point(field_mutable:File_Entry.recovery)
  return recovery_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File_Entry::release_recovery() {
  // @@protoc_insertion_point(field_release:File_Entry.recovery)
  clear_has_recovery();
  return recovery_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File_Entry::set_allocated_recovery(::std::string* recovery) {
  if (recovery != NULL) {
    set_has_recovery();
  } else {
    clear_has_recovery();
  }
  recovery_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recovery);
  // @@protoc_insertion_point(field_set_allocated:File_Entry.recovery)
}

// -------------------------------------------------------------------

// IdxList

// repeated .File_Entry file_entry = 1;
inline int IdxList::file_entry_size() const {
  return file_entry_.size();
}
inline void IdxList::clear_file_entry() {
  file_entry_.Clear();
}
inline const ::File_Entry& IdxList::file_entry(int index) const {
  // @@protoc_insertion_point(field_get:IdxList.file_entry)
  return file_entry_.Get(index);
}
inline ::File_Entry* IdxList::mutable_file_entry(int index) {
  // @@protoc_insertion_point(field_mutable:IdxList.file_entry)
  return file_entry_.Mutable(index);
}
inline ::File_Entry* IdxList::add_file_entry() {
  // @@protoc_insertion_point(field_add:IdxList.file_entry)
  return file_entry_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::File_Entry >*
IdxList::mutable_file_entry() {
  // @@protoc_insertion_point(field_mutable_list:IdxList.file_entry)
  return &file_entry_;
}
inline const ::google::protobuf::RepeatedPtrField< ::File_Entry >&
IdxList::file_entry() const {
  // @@protoc_insertion_point(field_list:IdxList.file_entry)
  return file_entry_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_idx_2eproto__INCLUDED
